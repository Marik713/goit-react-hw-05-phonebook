{"version":3,"sources":["components/App/ContactForm/ContactForm.module.css","components/App/ContactList/ContactListItem/ContactListItem.module.css","components/App/Filter/Filter.module.css","components/App/ContactList/ContactList.module.css","transitions/contact.module.css","components/App/Alert/Alert.module.css","transitions/title.module.css","transitions/alert.module.css","transitions/filter.module.css","helpers/phoneformatter.js","components/App/ContactList/ContactListItem/ContactListItem.js","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.js","components/App/Alert/Alert.jsx","components/App/ContactForm/ContactForm.js","components/App/App.js","index.js"],"names":["module","exports","formatPhone","array","ContactListItem","name","number","onRemove","className","styles","ContactList_item","contactWrapper","numberContact","split","ContactList_button","type","onClick","ContactList","contacts","onRemoveContact","TransitionGroup","component","map","id","CSSTransition","timeout","unmountOnExit","classNames","contactTransition","Filter","value","onChangeFilter","filterContainer","title","filterEditor_input","onChange","e","target","Alert","alertNotification","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","FormEditor","onSubmit","this","FormEditor_label","FormEditor_input","required","mask","FormEditor_button","Component","defaultProps","App","filter","sameUser","addContact","task","contact","includes","setTimeout","length","alert","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","in","titleTransition","appear","alertTransition","filterTransition","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,WAAa,gCAAgC,iBAAmB,sCAAsC,iBAAmB,sCAAsC,kBAAoB,yC,oBCArMD,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,mBAAqB,4CAA4C,cAAgB,uCAAuC,eAAiB,0C,sBCAxND,EAAOC,QAAU,CAAC,mBAAqB,mCAAmC,gBAAkB,gCAAgC,MAAQ,wB,kBCApID,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,KAAO,sBAAsB,WAAa,8B,gBCAtID,EAAOC,QAAU,CAAC,kBAAoB,mC,iBCAtCD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,WAAa,4B,gBCA9DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,gBCAhID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,4BAA4B,KAAO,qBAAqB,WAAa,6B,mMCGpHC,EAJK,SAACC,GACnB,MAAM,GAAN,OAAUA,EAAM,IAAhB,OAAqBA,EAAM,IAA3B,OAAgCA,EAAM,IAAtC,OAA2CA,EAAM,IAAjD,OAAsDA,EAAM,IAA5D,OAAiEA,EAAM,IAAvE,OAA4EA,EAAM,IAAlF,OAAuFA,EAAM,IAA7F,OAAkGA,EAAM,KCsB3FC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAjB,OACtB,qBAAIC,UAAWC,IAAOC,iBAAtB,UACE,sBAAKF,UAAWC,IAAOE,eAAvB,UACA,4BAAIN,IACJ,mBAAGG,UAAWC,IAAOG,cAArB,SAAqCV,EAAYI,EAAOO,MAAM,UAG5D,wBACEL,UAAWC,IAAOK,mBAClBC,KAAK,SACLV,KAAK,SACLW,QAAST,EAJX,wB,yBC0BSU,EA9BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKb,UAAWC,IAAOQ,YAAlD,SACGC,EAASI,KAAI,gBAAGC,EAAH,EAAGA,GAAIlB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACkB,EAAA,EAAD,CAEEC,QAAS,IACTC,eAAa,EACbC,WAAYC,IAJd,SAME,cAAC,EAAD,CAEEvB,KAAMA,EACNC,OAAQA,EACRC,SAAU,kBAAMY,EAAgBI,KAH3BA,IANFA,S,iBCPE,SAASM,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eACtC,OACE,sBAAKvB,UAAWC,IAAOuB,gBAAvB,UACE,oBAAIxB,UAAWC,IAAOwB,MAAtB,mCACA,uBACEzB,UAAWC,IAAOyB,mBAClBnB,KAAK,OACLe,MAAOA,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAeK,EAAEC,OAAOP,a,qBCDlCQ,EAPD,kBACZ,qBAAK9B,UAAWC,IAAO8B,kBAAvB,uC,wCCAmBC,E,4MACnBC,MAAQ,CACNpC,KAAM,GACNC,OAAQ,I,EAGVoC,aAAe,SAACN,GAAO,IAAD,EACIA,EAAEC,OAAlBhC,EADY,EACZA,KAAMyB,EADM,EACNA,MACd,EAAKa,SAAL,eACGtC,EAAOyB,K,EAIZc,aAAe,SAACR,GACdA,EAAES,iBACF,EAAKC,MAAMC,aAAX,eAA6B,EAAKN,QAClC,EAAKE,SAAS,CAAEtC,KAAM,GAAIC,OAAQ,M,uDAGlC,OACE,uBAAME,UAAWC,IAAOuC,WAAYC,SAAUC,KAAKN,aAAnD,UACE,wBAAOpC,UAAWC,IAAO0C,iBAAzB,iBAEE,uBACE3C,UAAWC,IAAO2C,iBAClBrC,KAAK,OACLV,KAAK,OACLyB,MAAOoB,KAAKT,MAAMpC,KAClB8B,SAAUe,KAAKR,kBAGnB,wBAAOlC,UAAWC,IAAO0C,iBAAzB,mBAEE,cAAC,IAAD,CACE3C,UAAWC,IAAO2C,iBAClBrC,KAAK,OACLV,KAAK,SACLyB,MAAOoB,KAAKT,MAAMnC,OAClB+C,UAAQ,EACRC,KAAK,YACLnB,SAAUe,KAAKR,kBAGnB,wBAAQlC,UAAWC,IAAO8C,kBAAmBxC,KAAK,SAAlD,gC,GA3CiCyC,aAmDzChB,EAAYiB,aAAe,CACzBpD,KAAM,GACNC,OAAQ,I,uDC/CWoD,E,4MACnBjB,MAAQ,CACNvB,SAAU,CACR,CAAEK,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEiB,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,cAEhDqD,OAAQ,GACRC,UAAU,G,EAkBZC,WAAa,SAACC,GAKZ,GAJuB,EAAKrB,MAAMvB,SAC/BI,KAAI,SAACyC,GAAD,OAAaA,EAAQ1D,QACzB2D,SAASF,EAAKzD,MAGf,EAAKsC,SAAS,CAAEiB,UAAU,IAC1BK,YAAW,kBAAM,EAAKtB,SAAS,CAAEiB,UAAU,MAAU,WAChD,GAAyB,IAArBE,EAAKzD,KAAK6D,OACnBC,MAAM,8BACD,CACL,IAAMJ,EAAO,2BACRD,GADQ,IAEXvC,GAAI6C,gBAGN,EAAKzB,UAAS,SAAC0B,GAAD,MAAgB,CAC5BnD,SAAS,CAAE6C,GAAH,mBAAeM,EAAUnD,iB,EAKvCoD,aAAe,SAACX,GACd,EAAKhB,SAAS,CAAEgB,Y,EAGlBY,mBAAqB,WAAO,IAAD,EACI,EAAK9B,MAA1BvB,EADiB,EACjBA,SAAUyC,EADO,EACPA,OAElB,OAAOzC,EAASyC,QAAO,SAACzC,GAAD,OACrBA,EAASb,KAAKmE,cAAcR,SAASL,EAAOa,mB,EAIhDC,cAAgB,SAACC,GACf,EAAK/B,UAAS,SAAC0B,GACb,MAAO,CACLnD,SAAUmD,EAAUnD,SAASyC,QAAO,qBAAGpC,KAAgBmD,U,kEAnD3D,IAAMC,EAAoBC,aAAaC,QAAQ,YAC3CF,GACFzB,KAAKP,SAAS,CACZzB,SAAU4D,KAAKC,MAAMJ,O,yCAKRK,EAAWX,GACxBA,EAAUnD,WAAagC,KAAKT,MAAMvB,UACpC0D,aAAaK,QAAQ,WAAYH,KAAKI,UAAUhC,KAAKT,MAAMvB,a,+BA8CrD,IAAD,EACsBgC,KAAKT,MAA1BkB,EADD,EACCA,OAAQC,EADT,EACSA,SAEVuB,EAAkBjC,KAAKqB,qBAE7B,OACE,sBAAK/D,UAAU,gBAAf,UACE,cAACgB,EAAA,EAAD,CACE4D,IAAI,EACJ3D,QAAS,IACTE,WAAY0D,IACZC,QAAQ,EAJV,SAME,oBAAI9E,UAAU,YAAd,yBAGF,cAAC,EAAD,CAAauC,aAAcG,KAAKW,aAEhC,cAACrC,EAAA,EAAD,CACE4D,GAAIxB,EACJnC,QAAS,IACTC,eAAa,EACbC,WAAY4D,IAJd,SAME,cAAC,EAAD,MAEF,cAAC/D,EAAA,EAAD,CACE4D,GAAID,EAAgBjB,OAAS,EAC7BzC,QAAS,IACTC,eAAa,EACbC,WAAY6D,IAJd,SAME,cAAC3D,EAAD,CAAQC,MAAO6B,EAAQ5B,eAAgBmB,KAAKoB,iBAE7Ca,EAAgBjB,OAAS,GACxB,cAAC,EAAD,CACEhD,SAAUiE,EACVhE,gBAAiB+B,KAAKuB,uB,GA1GDjB,a,MCNjCiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f983556d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormEditor\":\"ContactForm_FormEditor__2as51\",\"FormEditor_label\":\"ContactForm_FormEditor_label__3ZHk9\",\"FormEditor_input\":\"ContactForm_FormEditor_input__KaE_x\",\"FormEditor_button\":\"ContactForm_FormEditor_button__qdjGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList_item\":\"ContactListItem_ContactList_item__wrmw5\",\"ContactList_button\":\"ContactListItem_ContactList_button__3fI80\",\"numberContact\":\"ContactListItem_numberContact__Ujrb7\",\"contactWrapper\":\"ContactListItem_contactWrapper__1_YV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterEditor_input\":\"Filter_filterEditor_input__3uCWO\",\"filterContainer\":\"Filter_filterContainer__hmALA\",\"title\":\"Filter_title__3Bh8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2Mi74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contact_enter__1B0j3\",\"enterActive\":\"contact_enterActive__ksOMN\",\"exit\":\"contact_exit__3CLg5\",\"exitActive\":\"contact_exitActive__329Ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertNotification\":\"Alert_alertNotification__kbvxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"title_appear__14STv\",\"appearDone\":\"title_appearDone__3ePFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__GCx-o\",\"enterActive\":\"alert_enterActive__LAwN3\",\"exit\":\"alert_exit__2cEQu\",\"exitActive\":\"alert_exitActive__2hz_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__kRiwX\",\"enterActive\":\"filter_enterActive__1DxrK\",\"exit\":\"filter_exit__iQ5xV\",\"exitActive\":\"filter_exitActive__1iIQg\"};","const formatPhone = (array) => {\r\n  return `${array[0]}${array[1]}${array[2]}${array[3]}${array[4]}${array[5]}${array[6]}${array[7]}${array[8]}`;\r\n};\r\n\r\nexport default formatPhone;\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.css\";\r\nimport formatPhone from \"../../../../helpers/phoneformatter\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={styles.ContactList_item}>\r\n    <div className={styles.contactWrapper}>\r\n    <p>{name}</p>\r\n    <p className={styles.numberContact}>{formatPhone(number.split(\"\"))}</p>\r\n    </div>\r\n    {\r\n      <button\r\n        className={styles.ContactList_button}\r\n        type=\"button\"\r\n        name=\"delete\"\r\n        onClick={onRemove}\r\n      >\r\n        &#10006;\r\n      </button>\r\n    }\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport contactTransition from \"../../../transitions/contact.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={contactTransition}\r\n      >\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onRemove={() => onRemoveContact(id)}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <h3 className={styles.title}>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filterEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => (\r\n  <div className={styles.alertNotification}>Contact already exist!!!</div>\r\n);\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport InputTelMask from \"react-input-mask\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.FormEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.FormEditor_label}>\r\n          Number\r\n          <InputTelMask\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            required\r\n            mask=\"999-99-99\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.FormEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Alert from \"./Alert/Alert\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport titleTransition from \"../../transitions/title.module.css\";\nimport alertTransition from \"../../transitions/alert.module.css\";\nimport filterTransition from \"../../transitions/filter.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    sameUser: false,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      this.setState({ sameUser: true });\n      setTimeout(() => this.setState({ sameUser: false }), 3500);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter, sameUser } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"mainContainer\">\n        <CSSTransition\n          in={true}\n          timeout={500}\n          classNames={titleTransition}\n          appear={true}\n        >\n          <h1 className=\"mainTitle\">Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm onAddContact={this.addContact} />\n\n        <CSSTransition\n          in={sameUser}\n          timeout={250}\n          unmountOnExit\n          classNames={alertTransition}\n        >\n          <Alert />\n        </CSSTransition>\n        <CSSTransition\n          in={visibleContacts.length > 1}\n          timeout={250}\n          unmountOnExit\n          classNames={filterTransition}\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}